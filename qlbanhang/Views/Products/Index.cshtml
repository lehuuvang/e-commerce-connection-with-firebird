@model IEnumerable<qlbanhang.Model1s.Product>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    int total = Model.Count();
}

<div style="display: flex; justify-content: space-between;">
    <h1>Products</h1>
    <h4 style="text-align: right;">Total: <span style="color: green;">@total</span> products</h4>
</div>
<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="input-group mb-3" style="width:900px;">
    <input type="text" class="form-control" placeholder="Search Product..." id="searchInput">
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
                <button id="sortByNameBtn" style="background: none; border: none; cursor: pointer;">
                    <span><i class="ti ti-sort-descending"></i></span>
                </button>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.QuantityPerUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsOnOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReorderLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discontinued)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Supplier)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityPerUnit)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsInStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsOnOrder)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReorderLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discontinued)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Supplier.CompanyName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId"><span><i class="ti ti-edit"></i></span></a>
                @* <a asp-action="Details" asp-route-id="@item.CategoryId"><span><i class="ti ti-list-details"></i></span></a> | *@
                <a asp-action="Delete" asp-route-id="@item.ProductId"><span style="color:red"><i class="ti ti-circle-minus"></i></span></a>
            </td>
        </tr>
}
    </tbody>
</table>
@section Scripts {
    <script>
        document.getElementById("sortByNameBtn").addEventListener("click", function () {
            var tableBody = document.querySelector("table tbody");
            var rows = Array.from(tableBody.getElementsByTagName("tr"));

            rows.sort(function (a, b) {
                var nameA = a.cells[0].innerText.toUpperCase();
                var nameB = b.cells[0].innerText.toUpperCase();
                if (nameA < nameB) {
                    return -1;
                }
                if (nameA > nameB) {
                    return 1;
                }
                return 0;
            });

            tableBody.innerHTML = "";

            rows.forEach(function (row) {
                tableBody.appendChild(row);
            });
        });

        document.getElementById("searchInput").addEventListener("input", function () {
            var input, filter, table, tr, td, i, j, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.querySelector("table");
            tr = table.getElementsByTagName("tr");

            for (i = 0; i < tr.length; i++) {
                var displayRow = false;
                td = tr[i].getElementsByTagName("td");
                for (j = 0; j < td.length; j++) {
                    txtValue = td[j].textContent || td[j].innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        displayRow = true;
                        break;
                    }
                }
                tr[i].style.display = displayRow ? "" : "none";
            }
        });

    </script>
}
